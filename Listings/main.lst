C51 COMPILER V9.60.7.0   MAIN                                                              11/06/2023 23:38:37 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\src\lib\INC) DEBUG OB
                    -JECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2           * @Description:
   3           * @Blog: saisaiwa.com
   4           * @Author: ccy
   5           * @Date: 2023-11-02 11:19:34
   6           * @LastEditTime: 2023-11-06 10:15:11
   7           */
   8          // #include "eeprom.h"
   9          #include "gui.h"
  10          #include "rx8025.h"
  11          #include "ws2812b.h"
  12          
  13          #define KEY_FLAG_LP 1
  14          #define KEY_FLAG_LS 2
  15          #define KEY_FLAG_M 3
  16          #define KEY_FLAG_S 4
  17          
  18          #define PAGE_FLAG_CLOCK_TIME 0x01
  19          #define PAGE_FLAG_CLOCK_DATE 0x02
  20          #define PAGE_FLAG_MENU 0x03
  21          #define PAGE_FLAG_SET_CLOCK 0x10
  22          
  23          #define PAGE_MENU_FLAG_RGB_BLK 0x00
  24          #define PAGE_MENU_FLAG_RGB_OPEN 0x01
  25          #define PAGE_MENU_FLAG_SET_CLOCK 0x02
  26          
  27          u8 vfd_brightness = 7;  // VFD亮度等级 1~7
  28          u8 rgb_brightness = 3;  // RGB亮度等级 1~255对应1~3级调节
  29          bool rgb_open = true;   // RGB开关
  30          u8 config = 0;          // 用户配置信息
  31          u8 page_flag;           // 页面显示内容
  32          u8 page_menu_flag = PAGE_MENU_FLAG_RGB_BLK;  // 菜单选项Flag
  33          rx8025_timeinfo timeinfo;
  34          u8 data buffer[10];   // 显示缓存
  35          bool colon_flag = 0;  // 冒号显示状态
  36          
  37          u32 data time_isr_count;
  38          u32 data rgb_wait_count;
  39          u32 data set_wait_count;
  40          
  41          extern u32 data _systick_ccr;
  42          
  43          void page_menu();
  44          void key_button_scan();
  45          
  46          void main() {
  47   1          P_SW2 |= 0x80;  // 使能EAXFR寄存器 XFR
  48   1          hal_init_all_gpio();
  49   1          hal_init_systick();
  50   1          hal_init_uart();
  51   1          rx8025t_init();
  52   1          vfd_gui_init();
  53   1          vfd_gui_set_blk_level(vfd_brightness);
  54   1          // config = ee_read(STORE_ADDR);
C51 COMPILER V9.60.7.0   MAIN                                                              11/06/2023 23:38:37 PAGE 2   

  55   1          // // 规则： 8bit 最高位和最低位如果不是1则需要清数据
  56   1          // if ((config & 0x81) >= 1) {
  57   1          //     ee_erase(STORE_ADDR);
  58   1          //     config = 0x81;
  59   1          // } else {
  60   1          //     // 读取数据 低位起： 第二位是rgb开关控制位，第三第四位是rgb亮度调节
  61   1          //     rgb_open = config & 0x02;
  62   1          //     rgb_brightness = (config >> 2) & 0x03;
  63   1          // }
  64   1          rx8025_set_time(23, 11, 6, 1, 22, 8, 6);
  65   1          page_flag = PAGE_FLAG_CLOCK_TIME;
  66   1          key_button_scan();  // 启动按键扫描
  67   1          vfd_gui_set_text("ABCDEFG1234444", 0, 0);
  68   1          delay_ms(1000);
  69   1          while (1) {
  70   2              // delay_ms(300);
  71   2              // if (set_wait_count) {
  72   2              //     printf("Key:%bld\n", set_wait_count);
  73   2              // }
  74   2      
  75   2              if ((_systick_ccr - rgb_wait_count) >= 500) {
  76   3                  // run rgb update
  77   3                  // rgb_frame_update((u8)map(rgb_brightness, 0, 3, 0, 255));
  78   3                  // printf("Time:%bd\t",rgb_wait_count);
  79   3                  // printf("Hello\n");
  80   3                  rgb_wait_count = _systick_ccr;
  81   3              }
  82   2              // if ((*hal_systick_get() - set_wait_count) >= 500) {
  83   2              //     // update setting page content
  84   2              //     if (page_flag == PAGE_FLAG_MENU) {
  85   2              //         page_menu();
  86   2              //     }
  87   2              //     set_wait_count = *hal_systick_get();
  88   2              // }
  89   2      
  90   2              if ((_systick_ccr - time_isr_count) >= 500) {
  91   3                  // 500ms
  92   3                  rx8025_time_get(&timeinfo);
  93   3                  memset(buffer, 0, sizeof(buffer));
  94   3                  if (page_flag == PAGE_FLAG_CLOCK_TIME) {
  95   4                      colon_flag = !colon_flag;
  96   4                      formart_time(&timeinfo, &buffer);
  97   4                  } else if (page_flag == PAGE_FLAG_CLOCK_DATE) {
  98   4                      colon_flag = 0;
  99   4                      formart_date(&timeinfo, &buffer);
 100   4                  }
 101   3                  vfd_gui_set_text(buffer, colon_flag, 1);
 102   3                  // printf("TimeInfo:%s\n", buffer);
 103   3                  time_isr_count = _systick_ccr;
 104   3              }
 105   2          }
 106   1      }
 107          
 108          void page_menu() {
 109   1          memset(buffer, 0, sizeof(buffer));
 110   1          if (page_menu_flag == PAGE_MENU_FLAG_RGB_BLK) {
 111   2          } else if (page_menu_flag == PAGE_MENU_FLAG_RGB_OPEN) {
 112   2          } else if (page_menu_flag == PAGE_MENU_FLAG_SET_CLOCK) {
 113   2          }
 114   1      }
 115          
 116          void page_menu_click_handle(u8 key) {
C51 COMPILER V9.60.7.0   MAIN                                                              11/06/2023 23:38:37 PAGE 3   

 117   1          if (page_flag == PAGE_FLAG_MENU) {
 118   2          }
 119   1      }
*** WARNING C280 IN LINE 116 OF src\main.c: 'key': unreferenced local variable
 120          
 121          /**
 122           * 按键中断触发
 123           */
 124          // void user_key_isr(void) interrupt 11 {  // 借用13号 原中断号40
 125          // u8 intf = P3INTF;
 126          // u8 key_flag;
 127          // if (intf) {
 128          //     P3INTF = 0;
 129          //     // 单点逻辑判断
 130          //     if (intf & 0x08) {
 131          //         key_flag = KEY_FLAG_LP;
 132          //     } else if (intf & 0x10) {
 133          //         key_flag = KEY_FLAG_LS;
 134          //     } else if (intf & 0x20) {
 135          //         key_flag = KEY_FLAG_M;
 136          //     } else if (intf & 0x40) {
 137          //         key_flag = KEY_FLAG_S;
 138          //     }
 139          //     printf("KeyPress %bd\n",key_flag);
 140          //     page_menu_click_handle(key_flag);
 141          // }
 142          // }
 143          
 144          void key_button_scan() {
 145   1          // 10毫秒@22.1184MHz
 146   1          AUXR &= 0xFB;  // 定时器时钟12T模式
 147   1          T2L = 0x00;    // 设置定时初始值
 148   1          T2H = 0xB8;    // 设置定时初始值
 149   1          AUXR |= 0x10;  // 定时器2开始计时
 150   1          IE2 |= 0x04;   // 使能定时器2中断
 151   1      }
 152          
 153          void key_button_isr(void) interrupt 12 {
 154   1          if (!P33) {
 155   2              set_wait_count++;
 156   2          }
 157   1          if (!P34) {
 158   2              set_wait_count++;
 159   2          }
 160   1          if (!P35) {
 161   2              set_wait_count++;
 162   2          }
 163   1          if (!P36) {
 164   2              set_wait_count++;
 165   2          }
 166   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    451    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =     14       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   MAIN                                                              11/06/2023 23:38:37 PAGE 4   


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
