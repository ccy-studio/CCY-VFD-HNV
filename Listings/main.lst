C51 COMPILER V9.60.7.0   MAIN                                                              11/06/2023 10:23:47 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Embedded_drive\Keil_v5\C51\BIN\C51.EXE src\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\src\li
                    -b\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2           * @Description:
   3           * @Blog: saisaiwa.com
   4           * @Author: ccy
   5           * @Date: 2023-11-02 11:19:34
   6           * @LastEditTime: 2023-11-06 10:15:11
   7           */
   8          // #include "eeprom.h"
   9          #include "gui.h"
  10          #include "rx8025.h"
  11          #include "ws2812b.h"
  12          
  13          #define KEY_FLAG_LP 1
  14          #define KEY_FLAG_LS 2
  15          #define KEY_FLAG_M 3
  16          #define KEY_FLAG_S 4
  17          
  18          #define PAGE_FLAG_CLOCK_TIME 0x01
  19          #define PAGE_FLAG_CLOCK_DATE 0x02
  20          #define PAGE_FLAG_MENU 0x03
  21          #define PAGE_FLAG_SET_CLOCK 0x10
  22          
  23          #define PAGE_MENU_FLAG_RGB_BLK 0x00
  24          #define PAGE_MENU_FLAG_RGB_OPEN 0x01
  25          #define PAGE_MENU_FLAG_SET_CLOCK 0x02
  26          
  27          u8 vfd_brightness = 7;  // VFD亮度等级 1~7
  28          u8 rgb_brightness = 3;  // RGB亮度等级 1~255对应1~3级调节
  29          bool rgb_open = true;   // RGB开关
  30          u8 config = 0;          // 用户配置信息
  31          u8 page_flag;           // 页面显示内容
  32          u8 page_menu_flag = PAGE_MENU_FLAG_RGB_BLK;  // 菜单选项Flag
  33          rx8025_timeinfo timeinfo;
  34          u8 data buffer[9];    // 显示缓存
  35          bool colon_flag = 0;  // 冒号显示状态
  36          
  37          u16 data time_isr_count;
  38          u32 data rgb_wait_count;
  39          u32 data set_wait_count;
  40          
  41          void page_menu();
  42          void time_start();
  43          void time_cancel();
  44          
  45          void main() {
  46   1          P_SW2 |= 0x80;  // 使能EAXFR寄存器 XFR
  47   1          hal_init_all_gpio();
  48   1          hal_init_systick();
  49   1          hal_init_uart();
  50   1          rx8025t_init();
  51   1          vfd_gui_init();
  52   1          vfd_gui_set_blk_level(vfd_brightness);
  53   1          // config = ee_read(STORE_ADDR);
  54   1          // // 规则： 8bit 最高位和最低位如果不是1则需要清数据
C51 COMPILER V9.60.7.0   MAIN                                                              11/06/2023 10:23:47 PAGE 2   

  55   1          // if ((config & 0x81) >= 1) {
  56   1          //     ee_erase(STORE_ADDR);
  57   1          //     config = 0x81;
  58   1          // } else {
  59   1          //     // 读取数据 低位起： 第二位是rgb开关控制位，第三第四位是rgb亮度调节
  60   1          //     rgb_open = config & 0x02;
  61   1          //     rgb_brightness = (config >> 2) & 0x03;
  62   1          // }
  63   1          page_flag = PAGE_FLAG_CLOCK_TIME;
  64   1          time_start();
  65   1          while (1) {
  66   2              if ((hal_systick_get() - rgb_wait_count) >= 5) {
  67   3                  // run rgb update
  68   3                  rgb_frame_update((u8)map(rgb_brightness, 0, 3, 0, 255));
  69   3                  rgb_wait_count = hal_systick_get();
  70   3              }
  71   2              if ((hal_systick_get() - set_wait_count) >= 500) {
  72   3                  // update setting page content
  73   3                  if (page_flag == PAGE_FLAG_MENU) {
  74   4                      page_menu();
  75   4                  }
  76   3                  set_wait_count = hal_systick_get();
  77   3              }
  78   2          }
  79   1      }
  80          
  81          void page_menu() {
  82   1          memset(buffer, 0, sizeof(buffer));
  83   1          if (page_menu_flag == PAGE_MENU_FLAG_RGB_BLK) {
  84   2          } else if (page_menu_flag == PAGE_MENU_FLAG_RGB_OPEN) {
  85   2          } else if (page_menu_flag == PAGE_MENU_FLAG_SET_CLOCK) {
  86   2          }
  87   1      }
  88          
  89          void page_menu_click_handle(u8 key) {
  90   1          if (page_flag == PAGE_FLAG_MENU) {
  91   2          }
  92   1      }
*** WARNING C280 IN LINE 89 OF src\main.c: 'key': unreferenced local variable
  93          
  94          /**
  95           * 按键中断触发
  96           */
  97          void user_key_isr(void) interrupt 13 {  // 借用13号 原中断号40
  98   1          u8 intf = P3INTF;
  99   1          u8 key_flag;
 100   1          if (intf) {
 101   2              P3INTF = 0;
 102   2              // 单点逻辑判断
 103   2              if (intf & 0x08) {
 104   3                  key_flag = KEY_FLAG_LP;
 105   3              } else if (intf & 0x10) {
 106   3                  key_flag = KEY_FLAG_LS;
 107   3              } else if (intf & 0x20) {
 108   3                  key_flag = KEY_FLAG_M;
 109   3              } else if (intf & 0x40) {
 110   3                  key_flag = KEY_FLAG_S;
 111   3              }
 112   2              page_menu_click_handle(key_flag);
 113   2          }
 114   1      }
 115          
C51 COMPILER V9.60.7.0   MAIN                                                              11/06/2023 10:23:47 PAGE 3   

 116          void time_start() {
 117   1          // 2毫秒@22.1184MHz
 118   1          time_isr_count = 0;
 119   1          AUXR |= 0x04;  // 定时器时钟1T模式
 120   1          T2L = 0x33;    // 设置定时初始值
 121   1          T2H = 0x53;    // 设置定时初始值
 122   1          AUXR |= 0x10;  // 定时器2开始计时
 123   1          IE2 |= 0x04;   // 使能定时器2中断
 124   1      }
 125          void time_cancel() {
 126   1          AUXR &= 0xef;  // 关闭定时器2使能
 127   1      }
 128          
 129          void time_isr(void) interrupt 12 {
 130   1          time_isr_count++;
 131   1          if (time_isr_count >= 250) {
 132   2              // 500ms
 133   2              rx8025_time_get(&timeinfo);
 134   2              memset(buffer, 0, sizeof(buffer));
 135   2              if (page_flag == PAGE_FLAG_CLOCK_TIME) {
 136   3                  colon_flag = !colon_flag;
 137   3                  formart_time(&timeinfo, &buffer);
 138   3              } else if (page_flag == PAGE_FLAG_CLOCK_DATE) {
 139   3                  colon_flag = 0;
 140   3                  formart_date(&timeinfo, &buffer);
 141   3              }
 142   2              vfd_gui_set_text(buffer, colon_flag);
 143   2              time_isr_count = 0;
 144   2          }
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    530    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     14       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
