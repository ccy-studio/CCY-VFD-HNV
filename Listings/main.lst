C51 COMPILER V9.60.7.0   MAIN                                                              11/06/2023 00:06:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\src\lib\INC) DEBUG OB
                    -JECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2           * @Description:
   3           * @Blog: saisaiwa.com
   4           * @Author: ccy
   5           * @Date: 2023-11-02 11:19:34
   6           * @LastEditTime: 2023-11-03 17:06:25
   7           */
   8          #include "eeprom.h"
   9          #include "gui.h"
  10          #include "rx8025.h"
  11          #include "ws2812b.h"
  12          
  13          #define KEY_FLAG_LP 1
  14          #define KEY_FLAG_LS 2
  15          #define KEY_FLAG_M 3
  16          #define KEY_FLAG_S 4
  17          
  18          #define PAGE_FLAG_CLOCK_TIME 0x01
  19          #define PAGE_FLAG_CLOCK_DATE 0x02
  20          #define PAGE_FLAG_MENU 0x03
  21          #define PAGE_FLAG_SET_CLOCK 0x10
  22          
  23          #define PAGE_MENU_FLAG_RGB_BLK 0x00
  24          #define PAGE_MENU_FLAG_RGB_OPEN 0x01
  25          #define PAGE_MENU_FLAG_SET_CLOCK 0x02
  26          
  27          u8 vfd_brightness = 7;  // VFD亮度等级 1~7
  28          u8 rgb_brightness = 3;  // RGB亮度等级 1~255对应1~3级调节
  29          bool rgb_open = true;   // RGB开关
  30          u8 config = 0;          // 用户配置信息
  31          u8 page_flag;           // 页面显示内容
  32          u8 page_menu_flag = PAGE_MENU_FLAG_RGB_BLK;  // 菜单选项Flag
  33          rx8025_timeinfo timeinfo;
  34          u8 data buffer[9];    // 显示缓存
  35          bool colon_flag = 0;  // 冒号显示状态
  36          
  37          void page_menu();
  38          void page_main();
  39          
  40          void main() {
  41   1          P_SW2 |= 0x80;  // 使能EAXFR寄存器 XFR
  42   1          hal_init_all_gpio();
  43   1          hal_init_systick();
  44   1          hal_init_uart();
  45   1          rx8025t_init();
  46   1          vfd_gui_init();
  47   1          vfd_gui_set_blk_level(vfd_brightness);
  48   1          rgb_timer_stop();
  49   1          // config = ee_read(STORE_ADDR);
  50   1          // // 规则： 8bit 最高位和最低位如果不是1则需要清数据
  51   1          // if ((config & 0x81) >= 1) {
  52   1          //     ee_erase(STORE_ADDR);
  53   1          //     config = 0x81;
  54   1          // } else {
C51 COMPILER V9.60.7.0   MAIN                                                              11/06/2023 00:06:02 PAGE 2   

  55   1          //     // 读取数据 低位起： 第二位是rgb开关控制位，第三第四位是rgb亮度调节
  56   1          //     rgb_open = config & 0x02;
  57   1          //     rgb_brightness = (config >> 2) & 0x03;
  58   1          // }
  59   1          rgb_timer_set_brightness((u8)map(rgb_brightness, 0, 3, 0, 255));
  60   1          rgb_timer_start();
  61   1          page_flag = PAGE_FLAG_CLOCK_TIME;
  62   1      
  63   1          while (1) {
  64   2              // static uint8_t arr[3], ci;
  65   2              // arr[0] = 0x80;
  66   2              // arr[1] = 0x00;
  67   2              // arr[2] = 0x00;
  68   2              // sendDigAndData(1, arr, 3);
  69   2              // delay_ms(500);
  70   2              if (page_flag == PAGE_FLAG_CLOCK_TIME ||
  71   2                  page_flag == PAGE_FLAG_CLOCK_DATE) {
  72   3                  page_main();
  73   3              } else if (page_flag == PAGE_FLAG_MENU) {
  74   3                  page_menu();
  75   3              }
  76   2          }
  77   1      }
  78          
  79          void page_main() {
  80   1          rx8025_time_get(&timeinfo);
  81   1          memset(buffer, 0, sizeof(buffer));
  82   1          if (page_flag == PAGE_FLAG_CLOCK_TIME) {
  83   2              colon_flag = !colon_flag;
  84   2              formart_time(&timeinfo, &buffer);
  85   2          } else if (page_flag == PAGE_FLAG_CLOCK_DATE) {
  86   2              colon_flag = 0;
  87   2              formart_date(&timeinfo, &buffer);
  88   2          }
  89   1          vfd_gui_set_text(buffer, colon_flag);
  90   1          delay_ms(500);
  91   1          // hal_uart_send(buffer);
  92   1          // hal_uart_send("\n");
  93   1          printf("Time:%02bd-%02bd\n", timeinfo.min, timeinfo.sec);
  94   1      }
  95          
  96          void page_menu() {
  97   1          memset(buffer, 0, sizeof(buffer));
  98   1          if (page_menu_flag == PAGE_MENU_FLAG_RGB_BLK) {
  99   2          } else if (page_menu_flag == PAGE_MENU_FLAG_RGB_OPEN) {
 100   2          } else if (page_menu_flag == PAGE_MENU_FLAG_SET_CLOCK) {
 101   2          }
 102   1          delay_ms(500);
 103   1      }
 104          
 105          void page_menu_click_handle(u8 key) {
 106   1          if (page_flag == PAGE_FLAG_MENU) {
 107   2          }
 108   1      }
*** WARNING C280 IN LINE 105 OF src\main.c: 'key': unreferenced local variable
 109          
 110          /**
 111           * 按键中断触发
 112           */
 113          void user_key_isr(void) interrupt 13 {  // 借用13号 原中断号40
 114   1          u8 intf = P3INTF;
 115   1          u8 key_flag;
C51 COMPILER V9.60.7.0   MAIN                                                              11/06/2023 00:06:02 PAGE 3   

 116   1          if (intf) {
 117   2              P3INTF = 0;
 118   2              // 单点逻辑判断
 119   2              if (intf & 0x08) {
 120   3                  key_flag = KEY_FLAG_LP;
 121   3              } else if (intf & 0x10) {
 122   3                  key_flag = KEY_FLAG_LS;
 123   3              } else if (intf & 0x20) {
 124   3                  key_flag = KEY_FLAG_M;
 125   3              } else if (intf & 0x40) {
 126   3                  key_flag = KEY_FLAG_S;
 127   3              }
 128   2              page_menu_click_handle(key_flag);
 129   2          }
 130   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    400    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =     14       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
